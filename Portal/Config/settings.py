"""
Django settings for Config project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""


from pathlib import Path
import os.path
import datetime
import os
import sys


BASE_DIR = Path(__file__).resolve().parent.parent
PARENT_DIR = str(BASE_DIR.parent).replace('\\','\\\\')
#sys.path.append(PARENT_DIR)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+5b=nvy$z!qkr+@j)yzf8)tl-4ga_6ry!t$%7c8$394e+k(oz%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["192.168.20.81","eit-app",'localhost','192.168.70.83','192.168.70.25','192.168.70.100', '192.168.70.22']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #'Desktop.apps.DesktopConfig',
    #'EIT.apps.EitConfig',
    #'HR.apps.HrConfig',
    'corsheaders',
    'rest_framework',
    'django_middleware_global_request',
    'Systems.apps.SystemsConfig',
    'Cartable.apps.CartableConfig',
    #'AuthUser.apps.AuthuserConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_middleware_global_request.middleware.GlobalRequestMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'HR.middleware.DetectUserInfoMiddleware',

]

ROOT_URLCONF = 'Config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':[os.path.join(BASE_DIR,'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Utility.Authentication.ContextProcessors.tokeninfo',
            ],
        },
    },
]

WSGI_APPLICATION = 'Config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'mssql',  # 'mssql',
        'NAME': 'Portal',
        'USER': 'sa',
        'PASSWORD': 'Master123',
        'HOST': 'EIT-DJANGO-DB\\DJANGODB',
        'PORT': '',
        'OPTIONS': {
            'driver': 'ODBC Driver 17 for SQL Server', #'SQL Server Native Client 11.0'
        },
    },
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/


LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'
if DEBUG:
    STATICFILES_DIRS = [os.path.join(BASE_DIR,"static")]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,"media")
STATIC_URL_EIT = '/static_eit/'
STATIC_ROOT_EIT = os.path.join(BASE_DIR.parent,"EIT\static")
MEDIA_URL_HR = '/media_hr/'
MEDIA_ROOT_HR = os.path.join(BASE_DIR.parent,"HR\media")


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#DATABASE_ROUTERS = ['HR.DBRouters.router.CustomRouter']
# in key must write app name and in value nust write database name

#ROUTERS_APP_DB = {'EIT':'EIT', 'HR':'HR','AuthUser':'default','Desktop':'default','Systems':'default','Cartable':'default','Portal':'default','AccessControl':'AccessControl'}

#AUTH_USER_MODEL = 'HR.Users'
# AUTHENTICATION_BACKENDS = [
#     "HR.backends.LdapBackend",
# ]


CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True
CSRF_TRUSTED_ORIGINS = ['http://app.iraneit.com']

SESSION_COOKIE_NAME = os.getcwd().split("\\")[-1] + '_sessionid'

# from django_auth_ldap.config import LDAPSearch
# import ldap

# AUTH_LDAP_SERVER_URI = "ldap://192.168.20.22:389"
# AUTH_LDAP_BIND_DN = 'bpms'
# AUTH_LDAP_BIND_PASSWORD = 'Wsxedc@123'
# AUTH_LDAP_USER_SEARCH = LDAPSearch("DC=eit,DC=local", ldap.SCOPE_SUBTREE, "(&(objectClass=*)(sAMAccountName=%(user)s))")

REDIS_HOST = 'localhost'
REDIS_PORT = 6379

import mimetypes
mimetypes.add_type("application/javascript",".js",True)
CORS_ALLOW_ALL_ORIGINS = True

CURRENT_APP_PORT = "23000"
ACCESSCONTROL_IP_PORT = "http://192.168.20.81:13000"
APP_MODE = "production"
# if os.path.exists(os.path.join(BASE_DIR,"Config/local_settings.py")):
#     from .local_settings import *
#     APP_MODE = "development"
#     print("start app in development mode")
# else:
#     print("your app is production mode")